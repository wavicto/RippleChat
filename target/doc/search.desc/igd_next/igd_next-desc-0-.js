searchState.loadedDescShard("igd_next", 0, "This library allows you to communicate with an IGD enabled …\nThe client is not authorized to perform the operation.\nThe client is not authorized to perform the operation.\nThe client is not authorized to perform the operation.\nThe client is not authorized to perform the operation.\nThe client is not authorized to perform the operation.\nErrors returned by <code>Gateway::add_any_port</code> and …\n<code>AddAnyPortError</code>\nErrors returned by <code>Gateway::add_port</code>\n<code>AddPortError</code>\nattohttp error\nThe description was too long for the gateway to handle.\nThe description was too long for the gateway to handle.\nContains the error value\nAn error type that emcompasses all possible errors.\nThe gateway returned an unhandled error code and …\nThe gateway can only map internal ports to same-numbered …\nExternal port number 0 (any port) is considered invalid by …\nThis structure represents a gateway found by the search …\nErrors returned by <code>Gateway::get_external_ip</code>\n<code>GetExternalIpError</code>\nErrors than can occur while getting a port mapping\nhttp crate error type\nHttp/Hyper error\nWhen using the aio feature.\nWhen using the aio feature.\nWhen using the aio feature.\nWhen using the aio feature.\nCan not add a mapping for local port 0.\nCan not add a mapping for local port 0.\nThe response from the gateway could not be parsed.\nUnable to process the response\nError parsing URI\nIO Error\nIO Error\nThe gateway does not have any free ports.\nDid not receive any valid response within timeout\nNo such port mapping.\nContains the success value\nThe gateway only supports permanent leases (ie. a …\nThe gateway only supports permanent leases (ie. a …\nThe requested mapping conflicts with a mapping assigned to …\nOne port mapping entry as returned by …\nRepresents the protocols available for port mapping.\nErrors returned by <code>Gateway::remove_port</code>\n<code>RemovePortError</code>\nErrors that can occur when sending the request to the …\nSome other error occured performing the request.\nSome other error occured performing the request.\nSome other error occured performing the request.\nSome other error occured performing the request.\nSome other error occured performing the request.\n<code>RequestError</code>\nA result type where the error is <code>igd::Error</code>.\nThe gateway requires that the requested internal and …\nErrors than can occur while trying to find the gateway.\n<code>SearchError</code>\nGateway search configuration\nThe specified array index is out of bounds.\nTCP protocol\nUDP protocol\nAction is not supported by the gateway\nError parsing HTTP body\nUTF-8 decoding error\nXML processing error\nAdd a port mapping.with any external port.\nAdd a port mapping.\nSocket address of the gateway\nThis module implements the same features as the main …\nBind address for UDP socket (defaults to all <code>0.0.0.0</code>)\nBroadcast address for discovery packets (defaults to …\nControl schema for all actions\nUrl to get schema data from\nControl url of the device\nA flag whether this port mapping is enabled\nThe external port of the mapping\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet an external socket address with our external ip and …\nGet the external IP address of the gateway.\nGet one port mapping entry\nThe internal client of the port mapping Can be an IP …\nThe internal (local) port\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe lease duration of this port mapping in seconds\nA description for this port mapping\nThe protocol of the mapping\nThe remote host for which the mapping is valid Can be an …\nRemove a port mapping.\nRoot url of the device\nSearch gateway, using the given <code>SearchOptions</code>.\nTimeout for a single search response (defaults to 5s)\nTimeout for a search iteration (defaults to 10s)\nThis structure represents a gateway found by the search …\nTrait to allow abstracting over <code>tokio</code> and <code>async-std</code>.\nAdd a port mapping.with any external port.\nAdd a port mapping.\nSocket address of the gateway\nControl schema for all actions\nUrl to get schema data from\nControl url of the device\nReturns the argument unchanged.\nGet an external socket address with our external ip and …\nGet the external IP address of the gateway in a tokio …\nGet one port mapping entry\nCalls <code>U::from(self)</code>.\nExecutor provider\nRemove a port mapping.\nRoot url of the device\nSend an async request over the executor.\nTokio abstraction for the aio <code>Gateway</code>.\nTokio provider for the <code>Gateway</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSearch for a gateway with the provided options.")