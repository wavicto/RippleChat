searchState.loadedDescShard("iroh_metrics", 0, "Metrics library for iroh\nOpenMetrics <code>Counter</code> to measure discrete events.\nA <code>Counter</code>.\nA <code>Counter</code> value.\nPotential errors from this library.\nWriting the metrics to the output buffer failed.\nOpenMetrics <code>Gauge</code>.\nA <code>Gauge</code>.\nA <code>Gauge</code> value.\nAny IO related error.\nTrait for metric items.\nA metric item with its current value.\nThe types of metrics supported by this crate.\nThe value of an individual metric item.\nTrait for structs containing metric items.\nDerives <code>MetricsGroup</code> and <code>Iterable</code>.\nTrait for a set of structs implementing <code>MetricsGroup</code>.\nDerives <code>MetricsGroupSet</code> for a struct.\nHelper trait to abstract over different ways to access …\nIndicates that the metrics have not been enabled.\nA registry for <code>MetricsGroup</code>.\nA cloneable <code>Registry</code> in a read-write lock.\nCasts this metric to <code>Any</code> for downcasting to concrete types.\nReturns the inner metric as <code>Any</code>, for further downcasting …\nReturns the given metric type’s str representation.\nDecreases the <code>Gauge</code> by 1, returning the previous value.\nDecreases the <code>Gauge</code> by <code>i64</code>, returning the previous value.\nEncodes all metrics into a string in the OpenMetrics text …\nEncodes the metrics in the OpenMetrics text format into a …\nEncodes the metrics in the OpenMetrics text format into a …\nEncodes all metrics in the OpenMetrics text format.\nEncodes the schema of all registered metrics into the …\nEncodes the current values of all registered metrics into …\nFunctions to encode metrics into the OpenMetrics text …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the current value of the <code>Counter</code>.\nReturns the <code>Gauge</code> value.\nReturns an iterator over references to the <code>MetricsGroup</code> in …\nReturns an iterator over owned clones of the <code>MetricsGroup</code> …\nReturns the help of this metric item.\nIncreases the <code>Counter</code> by 1, returning the previous value.\nIncreases the <code>Gauge</code> by 1, returning the previous value.\nIncreases the <code>Counter</code> by <code>u64</code>, returning the previous value.\nIncreases the <code>Gauge</code> by <code>i64</code>, returning the previous value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all metric items with their …\nReturns an iterator over all metric items with their …\nReturns an iterator over all metrics in this metrics group …\nReturns an iterator over all metrics in this metrics group …\nTraits for iterating over the fields of structs.\nReturns the name of this metrics group.\nReturns the name of this metrics group set.\nReturns the name of this metric item.\nReturns a new metric item.\nConstructs a new counter, based on the given <code>help</code>.\nConstructs a new gauge, based on the given <code>help</code>.\nParses Prometheus metrics from a string.\nRegisters a <code>MetricsGroup</code> into this registry.\nRegisters a <code>MetricsGroupSet</code> into this registry.\nRegisters a <code>MetricsGroupSet</code> into this registry, prefixing …\nReturns the current schema version of this registry.\nSets the <code>Counter</code> value, returning the previous value.\nSets the <code>Gauge</code> to <code>v</code>, returning the previous value.\nCreates a subregistry where all metrics have a <code>key=value</code> …\nCreates a subregistry where all metrics are labeled.\nCreates a subregistry where all metrics are prefixed with …\nReturns the value as <code>f32</code>.\nReturns the type of this metric.\nReturns the <code>MetricType</code> for this item.\nReturns the <code>MetricType</code> for this metric value.\nReturns the current value of this metric.\nReturns the current value of this item.\nDecoder for metrics received from an <code>Encoder</code>\nIterator over decoded metric items.\nEncoder for converting metrics from a registry into …\nOptions for an <code>Encoder</code>\nA metric item combining schema and value information.\nSchema information for a single metric item.\nA collection of metric schemas.\nAn update containing schema and/or values for metrics.\nA collection of metric values.\nEncodes this metric item to OpenMetrics format.\nWrites <code># EOF\\n</code> to <code>writer</code>.\nExports the current state of the registry as an update.\nExports the current state of the registry as serialized …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHelp texts (may be omitted)\nHelp text, if available\nImports a metric update.\nImports a metric update from serialized bytes.\nWhether to include the metric help text in the transmitted …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe individual metric schemas\nThe individual metric values\nCreates an iterator over the decoded metric items.\nLabels associated with the metric as key-value pairs\nThe name of the metric\nCreates a new encoder for the given registry.\nCreates a new encoder for the given registry with custom …\nCreates a new <code>Schema</code> that does not track help text.\nReturns the name prefixed with all prefixes.\nPrefixes to prepend to the metric name\nOptional schema information (included when schema changes)\nReference to the metric’s schema information\nThe type of the metric (Counter, Gauge, etc.)\nReference to the metric’s current value\nThe metric values\nIterator over the fields of a struct.\nHelper trait to convert from <code>self</code> to <code>dyn Iterable</code>.\nTrait for iterating over the fields of a struct.\nDerives <code>Iterable</code> for a struct.\nReturns <code>self</code> as <code>dyn Iterable</code>\nReturns the number of fields in the struct.\nReturns an iterator over the fields of the struct.\nReturns the field name and dyn reference to the field.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")