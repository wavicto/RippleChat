searchState.loadedDescShard("crypto_box", 0, "RustCrypto: <code>crypto_box</code>\n<code>CryptoBox</code> instantiated with the ChaCha20 stream cipher.\nPublic-key encryption scheme based on the X25519 Elliptic …\nSize of a <code>crypto_box</code> public or secret key in bytes.\nNonce type.\nA <code>crypto_box</code> public key.\n<code>CryptoBox</code> instantiated with with the Salsa20 stream cipher.\nA <code>crypto_box</code> secret key.\nPoly1305 tag.\nBorrow the public key as bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitialize <code>PublicKey</code> from a byte array.\nInitialize <code>SecretKey</code> from a byte array.\nInitialize <code>PublicKey</code> from a byte slice.\nInitialize <code>SecretKey</code> from a byte slice.\nGenerate a random <code>SecretKey</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>CryptoBox</code>, performing X25519 Diffie-Hellman …\nGet the <code>PublicKey</code> which corresponds to this <code>SecretKey</code>\nSerialize this public key as bytes.\nSerialize <code>SecretKey</code> to bytes.\nObtain the inner <code>Scalar</code> value of this <code>SecretKey</code>.")