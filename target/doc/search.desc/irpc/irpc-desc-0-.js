searchState.loadedDescShard("irpc", 0, "A minimal RPC library for use with iroh.\nTrait to specify channels for a message and service\nA client to the service <code>S</code> using the local message type <code>M</code> …\nContains the error value\nError type that subsumes all possible errors in this …\nLocal in memory request\nA local sender for the service <code>S</code> using the message type <code>M</code>.\nContains the success value\nSealed marker trait for a receiver\nRemote cross process request\nA request to a service. This can be either local or remote.\nError when opening a request. When cross-process rpc is …\nType alias for a result with an irpc error type.\nRequirements for a RPC message\nThe receiver type, can be either mpsc, oneshot or none\nSealed marker trait for a sender\nMarker trait for a service\nThe sender type, can be either mpsc, oneshot or none\nA wrapper for a message with channels to send and receive …\nPerforms a request for which the client can send updates, …\nChannels that abstract over local or remote sending\nPerforms a request for which the client can send updates.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe inner message.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the local sender. This is useful if you don’t care …\nGet the parent span\nStart a request by creating a sender that can be used to …\nPerforms a request for which the server returns a oneshot …\nProcesses an RPC request enum and generates channel …\nThe request channel to receive the request from. Can be …\nSend a message to the service\nSend a message to the service without the type conversion …\nPerforms a request for which the server returns a mpsc …\nThe current span where the full message was created.\nThe return channel to send the response to. Can be set to …\nThe underlying io error. This can occur for remote …\nAn io error occurred. This can occur for remote …\nThe message exceeded the maximum allowed message size (see …\nThe message exceeded the maximum allowed message size […\nThe receiver has been closed. This is the only error that …\nError when receiving a oneshot or mpsc message. For local …\nError when sending a oneshot or mpsc message. For local …\nThe sender has been closed. This is the only error that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSPSC channel, similar to tokio’s mpsc channel\nNo channels, used when no communication is needed\nOneshot channel, similar to tokio’s oneshot channel\nA receiver that can be wrapped in a <code>Box&lt;dyn DynReceiver&lt;T&gt;&gt;</code>…\nA sender that can be wrapped in a <code>Arc&lt;dyn DynSender&lt;T&gt;&gt;</code>.\nSingle producer, single consumer sender.\nCreate a local mpsc sender and receiver pair, with the …\nAwait the sender close\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if this is a remote sender\nReceive a message\nSend a message.\nSend a message and yield until either it is sent or an …\nTry to send a message, returning as fast as possible if …\nTry to send a message, returning as fast as possible if …\nA receiver that does nothing. This is used when no …\nA sender that does nothing. This is used when no …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nwe can’t yet distinguish between local and remote boxed …\nA generic boxed receiver\nA generic boxed sender.\nA sender that can be wrapped in a <code>Box&lt;dyn DynSender&lt;T&gt;&gt;</code>.\nA oneshot receiver.\nA oneshot sender.\nCreate a local oneshot sender and receiver pair.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if this is a remote sender\nSend a message\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")