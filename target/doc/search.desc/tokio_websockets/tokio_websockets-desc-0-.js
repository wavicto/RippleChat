searchState.loadedDescShard("tokio_websockets", 0, "tokio-websockets\nImplementation of a WebSocket client.\nGeneral error type used in the crate.\nThis module contains a correct and complete implementation …\nAbstractions over DNS resolvers.\nWrapper types for TLS functionality, abstracting over …\nHTTP upgrade request and response generation and …\nBuilder for WebSocket client connections.\nList of headers added by the client which will cause an …\nAdds an extra HTTP header to the handshake request.\nSets the configuration for the WebSocket stream.\nEstablishes a connection to the WebSocket server. This …\nTakes over an already established stream and uses it to …\nSets the TLS connector for the client.\nReturns the argument unchanged.\nCreates a <code>Builder</code> that connects to a given URI. This URI …\nCalls <code>U::from(self)</code>.\nSets the limits for the WebSocket stream.\nCreates a <code>Builder</code> with all defaults that is not configured …\nSets the DNS resolver for the client.\nTakes over an already established stream that has already …\nSets the <code>Uri</code> to connect to. This URI must use the <code>ws</code> or <code>wss</code>\nAttempted to read from or write to a closed stream.\nDNS lookup failed.\nAttempted to add a disallowed header.\nGeneric error when using WebSockets with this crate.\nAttempted to connect to an invalid DNS name.\nI/O error.\nAttempted to connect a client to a remote without …\nPayload length limit was exceeded.\nWebSocket protocol violation.\nA general rustls error.\nAn unsupported, i.e. not <code>ws</code> or <code>wss</code>, or no URI scheme was …\nThe HTTP/1.1 Upgrade failed.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe server was acting as a gateway or proxy and received …\nClose status code.\nLow-level configuration for a <code>WebSocketStream</code> that allows …\nA fragmented control frame was received.\nEndpoint is “going away”, such as a server going down …\nServer is terminating the connection because it …\nEndpoint is terminating the connection because it has …\nAn invalid close code has been received.\nAn invalid opcode was received.\nAn invalid payload length was received.\nAn invalid RSV was received. This is used by extensions, …\nAn invalid UTF-8 segment was received when valid UTF-8 was …\nConfiguration for limitations on reading of <code>Message</code>s from a\nClient is terminating the connection because it has …\nEndpoint is terminating the connection because it has …\nA WebSocket message. This is cheaply clonable and uses …\nNormal closure, meaning that the purpose for which the …\nNo status code was actually present.\nEndpoint is terminating the connection because it has …\nEndpoint is terminating the connection due to a protocol …\nThe websocket message payload storage.\nError encountered on protocol violations by the other end …\nService is experiencing overload. A client should only …\nService is restarted. A client may reconnect, and if it …\nEndpoint is terminating the connection because it has …\nA masked frame was unexpectedly received.\nAn unmasked frame was unexpectedly received.\nA WebSocket stream that full messages can be read from and …\nReturns the <code>CloseCode</code> and close reason if the message is a …\nReturns a reference to the message payload, regardless of …\nReturns a reference to the message payload as a string if …\nCreate a new binary message.\nCreate a new close message. If an non-empty reason is …\nSets the threshold of queued up bytes after which the …\nSet the frame payload size to split outgoing messages into.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a mutable reference to the underlying I/O stream …\nReturns a reference to the underlying I/O stream wrapped …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the message payload and consumes the message, …\nWhether the message is a binary message.\nWhether the message is a close message.\nWhether the message is a ping message.\nWhether the message is a pong message.\nWhether the close code is reserved and cannot be sent over …\nWhether the message is a text message.\nReturns a reference to the inner websocket limits.\nReturns a mutable reference to the inner websocket limits.\nSets the maximum allowed payload length. <code>None</code> equals no …\nCreate a new ping message.\nCreate a new pong message.\nSee <code>max_payload_len</code>.\nCreate a new text message. The payload contents must be …\nA limit configuration without any limits.\nA <code>Resolver</code> that uses the blocking <code>getaddrinfo</code> syscall in …\nTrait for a DNS resolver to resolve hostnames and ports to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nResolve a hostname and port to an IP address, …\nA reusable TLS connector for wrapping streams.\nA stream that might be protected with TLS.\nPlain (non-TLS) connector.\nUnencrypted socket stream.\n<code>rustls</code> TLS connector.\nEncrypted socket stream using <code>rustls</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Connector</code> with the underlying TLS library …\nWraps a given stream with a layer of TLS.\n<code>Connection</code> header sent by the client does not contain “…\nServer did not return a HTTP Switching Protocols response.\nErrors that occur during the HTTP upgrade handshake …\nHeader required in the request or response is not present.\nFailed to parse client request or server response.\nA parsed HTTP/1.1 101 Switching Protocols response. These …\n<code>Sec-WebSocket-Version</code> header sent by the client is not …\n<code>Upgrade</code> header sent by the client does not match “…\nServer returned a <code>Sec-WebSocket-Accept</code> that is not …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")