searchState.loadedDescShard("stun_rs", 0, "STUN library.\nAddress family\nAn algorithm is the combination of the <code>AlgorithmId</code> and its …\nSTUN Password Algorithms\nSTUN message cookie\nAuthentication and message-integrity mechanisms. The STUN …\nContext used to decode STUN messages\nBuilder class used to construct <code>DecoderContext</code> objects\nContext used to decode STUN messages that requires special …\nBuilder class used to construct <code>EncoderContext</code> objects\nThe <code>ErrorCode</code> contains a numeric error code value in the …\nerror response\nKey used for authentication and message integrity\nIP version 4\nIP version 6\nindication\nlong-term credential mechanism\nSTUN magic cookie\nThe <code>MD5</code> (message-digest algorithm) hashing algorithm is a …\nSTUN message header size\nThe STUN message class. Although there are four message …\nClass used to decode STUN messages\nBuilder class used to create a stun <code>MessageDecoder</code>\nClass used to encode STUN messages\nBuilder class used to create a stun <code>MessageEncoder</code>\nThe STUN message header\nThe STUN method is a 12 bits hex number in the range …\nThe message type defines the message class (request, …\nrequest\nReserved\n<code>SHA256</code> is a part of the <code>SHA</code> 2 family of algorithms. It …\nshort-term credential mechanism\nThe stun message is the basic unit of information …\nThe <code>StunMessageBuilder</code> ease the creation of a <code>StunMessage</code>\nsuccess response\nThe transaction ID is a 96-bit identifier, used to …\nUnassigned\nReturns the algorithm\nReturns a reference to the bytes that represents the …\nGets the bytes representation of the key\nReturns the <code>u16</code> representation of this <code>MessageType</code>\nReturns the <code>u16</code> representation of this message method.\nReturns the <code>u32</code> representation of the cookie\nSTUN Attributes. This module contains all attributes …\nReturns the attributes contained in this STUN message.\nThe value of the most significant 2 bits\nBuilds a <code>DecoderContext</code>\nBuilds a <code>MessageDecoder</code>\nBuilds a <code>EncoderContext</code>\nBuilds a <code>MessageEncoder</code>\nCreates the STUN message.\nReturns the message class.\nReturns the message class\nReturns the class of the error code (the hundreds digit).\nMagic cookie\nGets the bytes representation of the key\nDecodes the STUN raw buffer\nCreates a cryptographically random transaction ID chosen …\nEncodes a STUN message.\nSTUN Errors. This module contains all errors that can …\nReturns the numeric error code value .\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the attribute if the message contains the …\nGets the context associated to this decoder\nGets the input text used by attributes that requires …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this is a long-term-credential mechanism\nReturns true if this is a short-term-credential mechanism\nReturns true if the method is within the valid range …\nKey used for integrity hashes\nReturns the message method\nReturns the message method.\nSTUN Methods Registry\nMessage length\nMessage type\nCreates a new algorithm with parameters.\nCreates a new message type.\nCreates a new builder.\nCreates a new <code>ErrorCode</code> type.\nCreates a <code>CredentialMechanism::LongTerm</code> key.\nCreates a <code>CredentialMechanism::ShortTerm</code> key\nIf agents should ignore attributes that follow …\nReturns the binary encoding of the error code modulo 100.\nPadding used when encoding a message\nReturns the parameters required by the algorithm.\nReturns the reason phrase associated to this error.\nReturns the transaction-id\nTransaction Id\nWhether validation is required to decoding\nAdds an attribute to the message.\nAdds a context to the builder\nAdds a context to the builder\nConfigure the builder to use a key to decode messages\nCreates a STUN message using an specific transaction ID. …\nIf raw data belonging to unknown attributes must be …\nWhether unknown attributes should keep the attribute data …\nWhether this decoder will validate attributes.\nThe <code>AlternateServer</code>atribute\nA STUN attribute type is a hex number in the range …\nThe <code>ErrorCode</code>atribute\nThe <code>Fingerprint</code>atribute\nThe <code>MappedAddress</code>atribute\nThe <code>MessageIntegrity</code>atribute\nThe <code>MessageIntegritySha256</code>atribute\nThe <code>Nonce</code>atribute\nThe <code>PasswordAlgorithm</code>atribute\nThe <code>PasswordAlgorithms</code>atribute\nThe <code>Realm</code>atribute\nThe <code>Software</code>atribute\nSTUN Attributes that can be attached to a <code>StunMessage</code>\nTrait implemented by all <code>StunAttribute</code>\nUnknown attribute. This attribute is added to a decoded …\nThe <code>Unknown</code>atribute\nThe <code>UnknownAttributes</code>atribute\nThe <code>UserHash</code>atribute\nThe <code>UserName</code>atribute\nThe <code>XorMappedAddress</code>atribute\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturn the <code>u16</code> representation of this attribute type\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns a reference to the internal attribute value or an …\nReturns the raw value associated to this unknown …\nReturns the STUN attribute type of this instance.\nReturns the STUN attribute type associated to this unknown …\nReturns the STUN attribute type of this instance.\nReturns a reference to the <code>AlternateServer</code> attribute.\nReturns a reference to the <code>ErrorCode</code> attribute.\nReturns a reference to the <code>Fingerprint</code> attribute.\nReturns a reference to the <code>MappedAddress</code> attribute.\nReturns a reference to the <code>MessageIntegrity</code> attribute.\nReturns a reference to the <code>MessageIntegritySha256</code> …\nReturns a reference to the <code>Nonce</code> attribute.\nReturns a reference to the <code>PasswordAlgorithm</code> attribute.\nReturns a reference to the <code>PasswordAlgorithms</code> attribute.\nReturns a reference to the <code>Realm</code> attribute.\nReturns a reference to the <code>Software</code> attribute.\nReturns a reference to the <code>Unknown</code> attribute.\nReturns a reference to the <code>UnknownAttributes</code> attribute.\nReturns a reference to the <code>UserHash</code> attribute.\nReturns a reference to the <code>UserName</code> attribute.\nReturns a reference to the <code>XorMappedAddress</code> attribute.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the STUN attribute type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this <code>StunAttribute</code> is <code>AlternateServer</code>\nReturns true if this is a comprehension optional attribute\nReturns true if this is a comprehension required attribute\nReturns true if this <code>StunAttribute</code> is <code>ErrorCode</code>\nReturns true if this <code>StunAttribute</code> is <code>Fingerprint</code>\nReturns true if this <code>StunAttribute</code> is <code>MappedAddress</code>\nReturns true if this <code>StunAttribute</code> is <code>MessageIntegrity</code>\nReturns true if this <code>StunAttribute</code> is …\nReturns true if this <code>StunAttribute</code> is <code>Nonce</code>\nReturns true if this <code>StunAttribute</code> is <code>PasswordAlgorithm</code>\nReturns true if this <code>StunAttribute</code> is <code>PasswordAlgorithms</code>\nReturns true if this <code>StunAttribute</code> is <code>Realm</code>\nReturns true if this <code>StunAttribute</code> is <code>Software</code>\nReturns true if this <code>StunAttribute</code> is <code>Unknown</code>\nReturns true if this <code>StunAttribute</code> is <code>UnknownAttributes</code>\nReturns true if this <code>StunAttribute</code> is <code>UserHash</code>\nReturns true if this <code>StunAttribute</code> is <code>UserName</code>\nReturns true if this <code>StunAttribute</code> is <code>XorMappedAddress</code>\nCreates a new <code>AttributeType</code> \nSTUN attributes defined for STUN protocol <code>RFC8489</code>\nThe alternate server represents an alternate transport …\nThe decoded <code>Fingerprint</code> attribute value.\nDecodable version of this attribute. This is the decoded …\nDecodable version of this attribute. This is the decoded …\nThe encodable <code>Fingerprint</code> attribute,\nEncodable version of this attribute. This is used when the …\nEncodable version of this attribute. This is used when the …\nThe ERROR-CODE attribute is used in error response …\nThe <code>Fingerprint</code> attribute MAY be present in all STUN …\nThe MAPPED-ADDRESS attribute indicates a reflexive …\nThe <code>MessageIntegrity</code> attribute contains an <code>HMAC-SHA1</code> …\nThe <code>MessageIntegritySha256</code> attribute contains an …\nThe NONCE attribute may be present in requests and …\nThe PASSWORD-ALGORITHM attribute is present only in …\nThe <code>PasswordAlgorithms</code> attribute may be present in …\nThe REALM attribute may be present in requests and …\nThe <code>Software</code> attribute contains a textual description of …\nThe <code>UnknownAttributes</code> is present only in an error response …\nThe USER-HASH attribute is used as a replacement for the …\nThe USER-NAME attribute is used for message integrity.  It …\nThe <code>XorMappedAddress</code> attribute is identical to the …\nAdds a new password algorithm.\nAdds a new unknown attribute\nReturns the algorithm\nReturns the slice representation of this None attribute\nReturns a slice representation of the realm value\nReturns the value of the <code>Software</code> attribute\nReturns a slice representation of the user name value\nReturn the array of unknown attributes\nReturns the error code value .\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value of the <code>UserHash</code> attribute\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this is a nonce cookie\nReturns an iterator over the passwords attributes.\nReturns an iterator over the unknown attributes.\nCreates a new attribute.\nCreates a new <code>ErrorCode</code> attribute.\nCreates a new attribute.\nCreates a new attribute.\nCreates a new attribute.\nCreates a <code>Nonce</code> attribute if the value provided is a valid …\nCreates a new <code>PasswordAlgorithm</code> attribute.\nCreates a <code>Realm</code> if the value provided meets the grammar …\nCreates a new SOFTWARE attribute\nCreates a new <code>UserHash</code> attribute.\nCreates a <code>UserName</code> if the value provided can be processed …\nCreates a <code>Nonce</code> attribute if the value provided is a valid …\nThe Nonce Cookie used for Long-Term Credential Mechanism\nReturns the parameters required by the algorithm.\nReturn the array of password attributes\nReturns the security flags set in the Nonce Cookie.\nReturns the <code>SocketAddr</code> associated to this attribute.\nReturns the <code>SocketAddr</code> associated to this attribute.\nReturns the <code>SocketAddr</code> associated to this attribute.\nReturns a <code>Nonce</code> attribute if the value provided is a valid …\nReturns a <code>Nonce</code> attribute if the value provided is a valid …\nReturns a <code>Nonce</code> attribute if the value provided is a valid …\nValidates the input value with the CRC-32 attribute value\nValidates the message using the <code>HMAC</code> value generated from …\nValidates the message using the <code>HMAC</code> value generated from …\nPassword algorithms\nThe STUN Security Feature flags\nUser name anonymity\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSmall buffer\nSource of error\nInvalid parameter\nInvalid parameter\nSmall buffer\nDescribes the error happened when parsing an <code>StunAttribute</code>\nDescribes an error decoding a <code>StunMessage</code>\nDescribes an error encoding a message <code>StunMessage</code>\nStun error\nProvides information about the error\nIndicates if the error happened when parsing the message, …\nDefines the type of error\nDescribes an error happening at message level\nA <code>String</code> describing the error,\nFailure to perform validations\nEncoded or decoded value is bugger than the maximum …\nThe attribute type, if it is known\nThe error\nError type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInformation about the error\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe position of the attribute in the <code>StunMessage</code>\nBinding\nReserved\nShared secret")