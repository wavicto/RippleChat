searchState.loadedDescShard("crypto_secretbox", 0, "RustCrypto: <code>crypto_secretbox</code>\nAuthenticated Encryption with Associated Data (AEAD) …\nIn-place stateless AEAD trait.\nThe upper bound amount of additional space required to …\nError type.\nSize of an XSalsa20Poly1305 key in bytes\nKey derivation function: trait for abstracting over …\nKey type.\nTypes which can be initialized from key.\nKey size in bytes.\nTypes which use key for initialization.\nSize of an XSalsa20Poly1305 nonce in bytes\nNonce type.\nThe length of a nonce.\nThe NaCl <code>crypto_secretbox</code> authenticated symmetric …\nSize of a Poly1305 tag in bytes\nPoly1305 tag.\nThe maximum length of the nonce.\n<code>crypto_secretbox</code> instantiated with the XChaCha20 stream …\n<code>crypto_secretbox</code> instantiated with the XSalsa20 stream …\nDecrypt the message in-place, returning an error in the …\nDecrypt the message in-place, returning an error in the …\nEncrypt the given buffer containing a plaintext message …\nEncrypt the data in-place, returning the authentication tag\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate random key using the provided <code>CryptoRng</code>.\nGenerate a random nonce for this AEAD algorithm.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDerive a new key from the provided input key and nonce.\nReturn key size in bytes.\nCreate new value from fixed size key.\nCreate new value from variable size key.\nThe type-level bit 0.\nThe type-level bit 1.\nThe type-level signed integer 0.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiates a singleton representing this bit.\nInstantiates a singleton representing this bit.\nInstantiates a singleton representing the integer 0.")