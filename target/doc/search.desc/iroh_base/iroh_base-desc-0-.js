searchState.loadedDescShard("iroh_base", 0, "Base types and utilities for Iroh\nSize of an encoded Ed25519 signature in bytes.\nError when decoding.\nThe encoded information had the wrong length.\nError when decoding the public key.\nError when deserialising a <code>PublicKey</code> or a <code>SecretKey</code>.\nThe length of an ed25519 <code>PublicKey</code>, in bytes.\nNetwork-level addressing information for an iroh node.\nThe identifier for a node in the (iroh) network.\nA public key.\nA URL identifying a relay server.\nCan occur when parsing a string into a <code>RelayUrl</code>.\nA secret key.\nEd25519 signature.\nErrors which may occur while processing signatures and …\nGet this public key as a byte array.\nReturns the direct addresses of this peer.\nSocket addresses where the peer might be reached directly.\nConvert to a hex string limited to the first 5 bytes for a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a <code>PublicKey</code> from a slice of bytes.\nParse an Ed25519 signature from a byte slice.\nCreate a secret key from its byte representation.\nParse an Ed25519 signature from its <code>R</code> and <code>s</code> components.\nCreates a new <code>NodeAddr</code> from its parts.\nParse an Ed25519 signature from a byte slice.\nGenerate a new <code>SecretKey</code> with a randomness generator.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true, if only a <code>NodeId</code> is present.\nCreates a new <code>NodeAddr</code> with no <code>relay_url</code> and no …\nThe node’s identifier.\nReturns the <code>VerifyingKey</code> for this <code>PublicKey</code>.\nThe public key of this <code>SecretKey</code>.\nBytes for the <code>R</code> component of a signature.\nReturns the relay url of this peer.\nThe node’s home relay url.\nBytes for the <code>s</code> component of a signature.\nReturns the <code>SigningKey</code> for this <code>SecretKey</code>.\nSign the given message and return a digital signature\nReturn the inner byte array.\nConvert this to the bytes representing the secret part. …\nConvert this signature into a byte vector.\nVerify a signature on a message with this secret key’s …\nAdds the given direct addresses.\nAdds a relay url.")