searchState.loadedDescShard("attohttpc", 0, "This project’s goal is to provide a lightweight and …\n202 Accepted [RFC7231, Section 6.3.3]\n208 Already Reported [RFC5842]\n502 Bad Gateway [RFC7231, Section 6.6.3]\n400 Bad Request [RFC7231, Section 6.5.1]\n409 Conflict [RFC7231, Section 6.5.8]\nCONNECT\n100 Continue [RFC7231, Section 6.2.1]\n201 Created [RFC7231, Section 6.3.2]\nError decoding chunk\nError decoding chunk size\nCould not connect to proxy with CONNECT method.\nCONNECT is not supported.\nInvalid Content-Length header\nDELETE\n417 Expectation Failed [RFC7231, Section 6.5.14]\nContains the error value\nA type that contains all the errors that can possibly …\nCommon errors that can occur during HTTP requests.\n424 Failed Dependency [RFC4918]\n403 Forbidden [RFC7231, Section 6.5.3]\n302 Found [RFC7231, Section 6.4.3]\n504 Gateway Timeout [RFC7231, Section 6.6.5]\nGET\n410 Gone [RFC7231, Section 6.5.9]\nHEAD\n505 HTTP Version Not Supported [RFC7231, Section 6.6.6]\nError parsing header\nError generated by the <code>http</code> crate.\n418 I’m a teapot [curiously not registered by IANA but …\n226 IM Used [RFC3229]\n507 Insufficient Storage [RFC4918]\n500 Internal Server Error [RFC7231, Section 6.6.1]\nInvalid base URL given to the Request.\nInvalid mime type in a Multipart form\nServer sent an invalid response.\nErrors than can occur while parsing the response from the …\nAn URL with an invalid host was found while processing the …\nThe URL scheme is unknown and the port is missing.\nIO Error\n411 Length Required [RFC7231, Section 6.5.10]\n423 Locked [RFC4918]\n508 Loop Detected [RFC5842]\nInvalid or missing Location header in redirection\n405 Method Not Allowed [RFC7231, Section 6.5.5]\n421 Misdirected Request RFC7540, Section 9.1.2\n301 Moved Permanently [RFC7231, Section 6.4.2]\n300 Multiple Choices [RFC7231, Section 6.4.1]\n207 Multi-Status [RFC4918]\nThe Request Method (VERB)\n511 Network Authentication Required [RFC6585]\n203 Non-Authoritative Information [RFC7231, Section 6.3.4]\n406 Not Acceptable [RFC7231, Section 6.5.6]\n510 Not Extended [RFC2774]\n404 Not Found [RFC7231, Section 6.5.4]\n501 Not Implemented [RFC7231, Section 6.6.2]\n304 Not Modified [RFC7232, Section 4.1]\n204 No Content [RFC7231, Section 6.3.5]\n200 OK [RFC7231, Section 6.3.1]\nOPTIONS\nContains the success value\n206 Partial Content [RFC7233, Section 4.1]\nPATCH\n413 Payload Too Large [RFC7231, Section 6.5.11]\n402 Payment Required [RFC7231, Section 6.5.2]\n308 Permanent Redirect [RFC7238]\nPOST\n412 Precondition Failed [RFC7232, Section 4.2]\n428 Precondition Required [RFC6585]\n102 Processing [RFC2518]\n407 Proxy Authentication Required [RFC7235, Section 3.2]\nPUT\nRepresents a request that’s ready to be sent. You can …\nContains proxy settings and utilities to find which proxy …\nUtility to build ProxySettings easily.\n416 Range Not Satisfiable [RFC7233, Section 4.4]\n431 Request Header Fields Too Large [RFC6585]\n408 Request Timeout [RFC7231, Section 6.5.7]\n205 Reset Content [RFC7231, Section 6.3.6]\nInvalid redirection URL\n<code>RequestBuilder</code> is the main way of building requests.\nAllows to inspect the properties of a request before …\n<code>Response</code> represents a response returned by a server.\nThe <code>ResponseReader</code> is used to read the body of a response.\nWrapper for the <code>Result</code> type with an <code>Error</code>.\n303 See Other [RFC7231, Section 6.4.4]\n503 Service Unavailable [RFC7231, Section 6.6.4]\n101 Switching Protocols [RFC7231, Section 6.2.2]\n<code>Session</code> is a type that can carry settings over multiple …\nAn HTTP status code (<code>status-code</code> in RFC 7230 et al.).\nStatus code\nStatus code indicates failure\nStatus line\n307 Temporary Redirect [RFC7231, Section 6.4.7]\n429 Too Many Requests [RFC6585]\nTRACE\nTLS was not enabled by features.\nToo many redirections\n401 Unauthorized [RFC7235, Section 3.1]\n451 Unavailable For Legal Reasons [RFC7725]\n422 Unprocessable Entity [RFC4918]\n415 Unsupported Media Type [RFC7231, Section 6.5.13]\n426 Upgrade Required [RFC7231, Section 6.5.15]\n414 URI Too Long [RFC7231, Section 6.5.12]\n305 Use Proxy [RFC7231, Section 6.4.5]\n506 Variant Also Negotiates [RFC2295]\nAdd a hostname pattern to ignore when finding the proxy to …\nAdds a root certificate that will be trusted.\nAdds a root certificate that will be trusted.\nReturn a &amp;str representation of the HTTP method\nReturns a &amp;str representation of the <code>StatusCode</code>\nReturns the <code>u16</code> corresponding to this <code>StatusCode</code>.\nEnable HTTP bearer authentication.\nContains types to describe request bodies\nSet the body of this request.\nAccess the current body\nGet the body of the request.\nBuild the settings.\nGet a new builder for ProxySettings.\nRead the response to a <code>Vec</code> of bytes.\nRead the response to a <code>Vec</code> of bytes.\nSet the body of this request to be bytes.\nGet the standardised <code>reason-phrase</code> for this status code.\nSets a connect timeout for this request.\nSets a connect timeout for this request.\nSets if this request will accept invalid TLS certificates.\nSets if this <code>Request</code> will accept invalid TLS certificates.\nSets if this request will accept an invalid hostname in a …\nSets if this <code>Request</code> will accept an invalid hostname in a …\nCreate a new <code>RequestBuilder</code> with the DELETE method.\nCreate a new <code>RequestBuilder</code> with the DELETE method and …\nReturns error variant if the status code was not a success …\nSet the body of this request using a local file.\nSets if this request should follow redirects, 3xx codes.\nSets if this <code>Request</code> should follow redirects, 3xx codes.\nGet the proxy URL to use for the given URL.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP method.\nConverts a &amp;u8 to a status code\nGet the proxy configuration from the environment using the …\nConverts a u16 to a status code.\nCreate a new <code>RequestBuilder</code> with the GET method.\nCreate a new <code>RequestBuilder</code> with the GET method and this …\nCreate a new <code>RequestBuilder</code> with the HEAD method.\nCreate a new <code>RequestBuilder</code> with the HEAD method and this …\nThis module is a re-export of the <code>http</code> crate’s <code>header</code> …\nModify a header for this request.\nModify a header for this <code>Request</code>.\nAppend a new header for this request.\nAppend a new header for this <code>Request</code>.\nGet the headers of this <code>Response</code>.\nAcess the current headers\nGet the headers of this request.\nSet the proxy for http requests.\nSet the proxy for https requests.\nInspect the properties of this request\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nComsume this <code>Error</code> and get the <code>ErrorKind</code> inside.\nCheck if status is within 400-499.\nWhether a method is considered “idempotent”, meaning …\nCheck if status is within 100-199.\nCheck if status is within 300-399.\nWhether a method is considered “safe”, meaning the …\nCheck if status is within 500-599.\nChecks if the status code of this <code>Response</code> was a success …\nCheck if status is within 200-299.\nGet a reference to the <code>ErrorKind</code> inside.\nSet the maximum number of headers accepted in responses to …\nSet the maximum number of headers accepted in responses to …\nSet the maximum number of redirections this request can …\nSet the maximum number of redirections this <code>Request</code> can …\nAccess the current method\nGet the method of this request.\nCreate a new <code>RequestBuilder</code> with the base URL and the …\nCreate a new ProxySetting builder with no initial …\nCreate a new <code>Session</code> with default settings.\nCreate a new <code>RequestBuilder</code> with the OPTIONS method.\nCreate a new <code>RequestBuilder</code> with the OPTIONS method and …\nAssociate a query string parameter to the given value.\nAssociated a list of pairs to query parameters.\nCreate a new <code>RequestBuilder</code> with the PATCH method.\nCreate a new <code>RequestBuilder</code> with the PATCH method and this …\nCreate a new <code>RequestBuilder</code> with the POST method.\nCreate a new <code>RequestBuilder</code> with the POST method and this …\nCreate a <code>PreparedRequest</code> from this <code>RequestBuilder</code>.\nSets the proxy settigns for this request.\nSets the proxy settigns for this request.\nCreate a new <code>RequestBuilder</code> with the PUT method.\nCreate a new <code>RequestBuilder</code> with the PUT method and this …\nSets a read timeout for this request.\nSets a read timeout for this request.\nSend this request directly.\nSend this request and wait for the result.\nSplit this <code>Response</code> into a tuple of <code>StatusCode</code>, <code>HeaderMap</code>, …\nGet the status code of this <code>Response</code>.\nRead the response to a <code>String</code>.\nRead the response to a <code>String</code>.\nSet the body of this request to be text.\nRead the response body to a String using the UTF-8 …\nRead the response body to a String using the UTF-8 …\nSets a timeout for the whole request.\nSets a timeout for the whole request.\nCreate a new <code>RequestBuilder</code> with the TRACE method.\nCreate a new <code>RequestBuilder</code> with the TRACE method and this …\nModify a header for this request.\nModify a header for this <code>Request</code>.\nAppend a new header to this request.\nAppend a new header to this <code>Request</code>.\nTry to create a new <code>RequestBuilder</code>.\nCreate a <code>PreparedRequest</code> from this <code>RequestBuilder</code>.\nAccess the current URL\nGet the URL of this request.\nWrite the response to any object that implements <code>Write</code>.\nWrite the response to any object that implements <code>Write</code>.\nUp to 10 KiB of body data from the proxy which might help …\nStatus code from the proxy.\nA generic rewindable request body\nThe kinds of request bodies currently supported by this …\nA request body containing binary data\nA request body that is transferred using chunked encoding\nAn empty request body\nAn empty request body\nA request body backed by a local file\nA request body with a known length\nA request body containing UTF-8-encoded text\nGets the content type this body is tied to if it has one.\nGets the content type this body is tied to if it has one.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermine the kind of the request body\nWrite out the request body into the given writer\nAdvertises which content types the client is able to …\nAdvertises which character set the client is able to …\nAdvertises which content encoding the client is able to …\nAdvertises which languages the client is able to …\nMarker used by the server to advertise partial request …\nPreflight response indicating if the response to the …\nPreflight response indicating permitted HTTP headers.\nPreflight header response indicating permitted access …\nIndicates whether the response can be shared with …\nIndicates which headers can be exposed as part of the …\nIndicates how long the results of a preflight request can …\nInforms the server which HTTP headers will be used when an …\nInforms the server know which HTTP method will be used …\nIndicates the time in seconds the object has been in a …\nLists the set of methods support by a resource.\nAdvertises the availability of alternate services to …\nContains the credentials to authenticate a user agent with …\nA marker trait used to identify values that can be used as …\nSpecifies directives for caching mechanisms in both …\nIndicates how caches have handled a response and its …\nSpecifies directives that allow origin servers to control …\nControls whether or not the network connection stays open …\nIndicates if the content is expected to be displayed …\nUsed to compress the media-type.\nUsed to describe the languages intended for the audience.\nIndicates the size of the entity-body.\nIndicates an alternate location for the returned data.\nIndicates where in a full body message a partial message …\nAllows controlling resources the user agent is allowed to …\nAllows experimenting with policies by monitoring their …\nUsed to indicate the media type of the resource.\nContains stored HTTP cookies previously sent by the server …\nContains the date and time at which the message was …\nIndicates the client’s tracking preference.\nA drain iterator for <code>HeaderMap</code>.\nIdentifier for a specific version of a resource.\nIndicates expectations that need to be fulfilled by the …\nContains the date/time after which the response is …\nA view into a single location in a <code>HeaderMap</code>, which may be …\nContains information from the client-facing side of proxy …\nContains an Internet email address for a human user who …\nA view to all values stored in a single entry.\nSpecifies the domain name of the server and (optionally) …\nA set of HTTP headers\nRepresents an HTTP header field name\nRepresents an HTTP header field value.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on the modification date.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on range.\nMakes the request conditional based on the last …\nA marker trait used to identify values that can be used as …\nAn owning iterator over the entries of a <code>HeaderMap</code>.\nA possible error when converting a <code>HeaderName</code> from another …\nA possible error when converting a <code>HeaderValue</code> from a …\n<code>HeaderMap</code> entry iterator.\n<code>HeaderMap</code> mutable entry iterator\nAn iterator over <code>HeaderMap</code> keys.\nContent-Types that are acceptable for the response.\nAllows the server to point an interested client to another …\nIndicates the URL to redirect a page to.\nIndicates the max number of intermediaries the request …\nError returned when max capacity of <code>HeaderMap</code> is exceeded\nIndicates where a fetch originates from.\nAn occupied entry\nA view into a single occupied location in a <code>HeaderMap</code>.\nHTTP/1.0 header usually used for backwards compatibility.\nDefines the authentication method that should be used to …\nContains the credentials to authenticate a user agent to a …\nAssociates a specific cryptographic public key with a …\nSends reports of pinning violation to the report-uri …\nIndicates the part of a document that the server should …\nContains the address of the previous web page from which a …\nGoverns which referrer information should be included with …\nInforms the web browser that the current page or frame …\nThe Retry-After response HTTP header indicates how long …\nThe |Sec-WebSocket-Accept| header field is used in the …\nThe |Sec-WebSocket-Extensions| header field is used in the …\nThe |Sec-WebSocket-Key| header field is used in the …\nThe |Sec-WebSocket-Protocol| header field is used in the …\nThe |Sec-WebSocket-Version| header field is used in the …\nContains information about the software used by the origin …\nUsed to send cookies from the server to the user agent.\nTells the client to communicate with HTTPS instead of …\nInforms the server of transfer encodings willing to be …\nAllows the sender to include additional fields at the end …\nSpecifies the form of encoding used to safely transfer the …\nA possible error when converting a <code>HeaderValue</code> to a string …\nUsed as part of the exchange to upgrade the protocol.\nSends a signal to the server expressing the client’s …\nContains a string that allows identifying the requesting …\nDetermines how to match future requests with cached …\nAdded by proxies to track routing.\nA vacant entry\nA view into a single empty location in a <code>HeaderMap</code>.\nAn drain iterator of all values associated with a single …\nAn iterator of all values associated with a single header …\nA mutable iterator of all values associated with a single …\n<code>HeaderMap</code> value iterator.\n<code>HeaderMap</code> mutable value iterator\nGeneral HTTP header contains information about possible …\nDefines the authentication method that should be used to …\nMarker used by the server to indicate that the MIME types …\nControls DNS prefetching.\nIndicates whether or not a browser should be allowed to …\nStop pages from loading when an XSS attack is detected.\nInserts a key-value pair into the map.\nInsert the value into the entry.\nConverts a <code>HeaderValue</code> to a byte slice.\nReturns a <code>str</code> representation of the header.\nReturns the number of headers the map can hold without …\nClears the map, removing all key-value pairs. Keeps the …\nReturns true if the map contains a value for the specified …\nClears the map, returning all entries as an iterator.\nGets the given key’s corresponding entry in the map for …\nPerforms a case-insensitive comparison of the string …\nPerforms a case-insensitive comparison of the string …\nExtend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a byte slice to a <code>HeaderValue</code>.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.\nConvert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …\nConverts a HeaderName into a HeaderValue\nConverts a static string to a HTTP header name.\nConvert a static string to a <code>HeaderValue</code>.\nAttempt to convert a string to a <code>HeaderValue</code>.\nReturns a reference to the value associated with the key.\nGet a reference to the first value in the entry.\nReturns a view of all values associated with a key.\nReturns a mutable reference to the value associated with …\nGet a mutable reference to the first value in the entry.\nPanics\nInserts a key-value pair into the map.\nInsert the value into the entry.\nSets the value of the entry.\nInsert the value into the entry.\nSets the value of the entry.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves keys …\nTake ownership of the key\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nReturns true if the map contains no elements.\nReturns true if the <code>HeaderValue</code> has a length of zero bytes.\nReturns <code>true</code> if the value represents sensitive data.\nAn iterator visiting all key-value pairs.\nReturns an iterator visiting all values associated with …\nReturns an iterator visiting all values associated with …\nAn iterator visiting all key-value pairs, with mutable …\nReturns an iterator mutably visiting all values associated …\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key.\nAn iterator visiting all keys.\nReturns the number of keys stored in the map.\nReturns the number of headers stored in the map.\nReturns the length of <code>self</code>.\nCreate an empty <code>HeaderMap</code>.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nRemoves a key from the map, returning the value associated …\nRemove the entry from the map.\nRemove the entry from the map.\nRemove the entry from the map.\nReserves capacity for at least <code>additional</code> more headers to …\nMark that the header value represents sensitive …\nYields a <code>&amp;str</code> slice if the <code>HeaderValue</code> only contains …\nInserts a key-value pair into the map.\nGets the given key’s corresponding entry in the map for …\nInserts a key-value pair into the map.\nInsert the value into the entry.\nInsert the value into the entry.\nReserves capacity for at least <code>additional</code> more headers to …\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nAn iterator visiting all values.\nAn iterator visiting all values mutably.\nCreate an empty <code>HeaderMap</code> with the specified capacity.")