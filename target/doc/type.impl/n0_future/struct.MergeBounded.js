(function() {
    var type_impls = Object.fromEntries([["n0_future",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CS%3E-for-MergeBounded%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_buffered/merge_bounded.rs.html#97\">Source</a><a href=\"#impl-FromIterator%3CS%3E-for-MergeBounded%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;S&gt; for <a class=\"struct\" href=\"n0_future/struct.MergeBounded.html\" title=\"struct n0_future::MergeBounded\">MergeBounded</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"n0_future/trait.Stream.html\" title=\"trait n0_future::Stream\">Stream</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_buffered/merge_bounded.rs.html#98-100\">Source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;T&gt;(iter: T) -&gt; <a class=\"struct\" href=\"n0_future/struct.MergeBounded.html\" title=\"struct n0_future::MergeBounded\">MergeBounded</a>&lt;S&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = S&gt;,</div></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<S>","n0_future::Merge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MergeBounded%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_buffered/merge_bounded.rs.html#41\">Source</a><a href=\"#impl-MergeBounded%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"struct\" href=\"n0_future/struct.MergeBounded.html\" title=\"struct n0_future::MergeBounded\">MergeBounded</a>&lt;S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_buffered/merge_bounded.rs.html#52\">Source</a><h4 class=\"code-header\">pub fn <a href=\"n0_future/struct.MergeBounded.html#tymethod.push\" class=\"fn\">push</a>(&amp;mut self, stream: S)</h4></section></summary><div class=\"docblock\"><p>Push a stream into the set.</p>\n<p>This method adds the given stream to the set. This method will not\ncall <a href=\"n0_future/trait.Stream.html#tymethod.poll_next\" title=\"method n0_future::Stream::poll_next\"><code>poll_next</code></a> on the submitted stream. The caller must\nensure that <a href=\"n0_future/trait.Stream.html#tymethod.poll_next\" title=\"method n0_future::Stream::poll_next\"><code>Merge::poll_next</code></a> is called\nin order to receive wake-up notifications for the given stream.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>This method will panic if the buffer is currently full. See <a href=\"n0_future/struct.MergeBounded.html#method.try_push\" title=\"method n0_future::MergeBounded::try_push\"><code>Merge::try_push</code></a> to get a result instead</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_push\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_buffered/merge_bounded.rs.html#67\">Source</a><h4 class=\"code-header\">pub fn <a href=\"n0_future/struct.MergeBounded.html#tymethod.try_push\" class=\"fn\">try_push</a>(&amp;mut self, stream: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.unit.html\">()</a>, S&gt;</h4></section></summary><div class=\"docblock\"><p>Push a future into the set.</p>\n<p>This method adds the given future to the set. This method will not\ncall <a href=\"n0_future/trait.Future.html#tymethod.poll\" title=\"method n0_future::Future::poll\"><code>poll</code></a> on the submitted future. The caller must\nensure that <a href=\"n0_future/trait.Stream.html#tymethod.poll_next\" title=\"method n0_future::Stream::poll_next\"><code>FuturesUnorderedBounded::poll_next</code></a> is called\nin order to receive wake-up notifications for the given future.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This method will error if the buffer is currently full, returning the future back</p>\n</div></details></div></details>",0,"n0_future::Merge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stream-for-MergeBounded%3CS%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_buffered/merge_bounded.rs.html#72\">Source</a><a href=\"#impl-Stream-for-MergeBounded%3CS%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S&gt; <a class=\"trait\" href=\"n0_future/trait.Stream.html\" title=\"trait n0_future::Stream\">Stream</a> for <a class=\"struct\" href=\"n0_future/struct.MergeBounded.html\" title=\"struct n0_future::MergeBounded\">MergeBounded</a>&lt;S&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"n0_future/trait.Stream.html\" title=\"trait n0_future::Stream\">Stream</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/futures_buffered/merge_bounded.rs.html#73\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"n0_future/trait.Stream.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = &lt;S as <a class=\"trait\" href=\"n0_future/trait.Stream.html\" title=\"trait n0_future::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"n0_future/trait.Stream.html#associatedtype.Item\" title=\"type n0_future::Stream::Item\">Item</a></h4></section></summary><div class='docblock'>Values yielded by the stream.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_next\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_buffered/merge_bounded.rs.html#75\">Source</a><a href=\"#method.poll_next\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"n0_future/trait.Stream.html#tymethod.poll_next\" class=\"fn\">poll_next</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut <a class=\"struct\" href=\"n0_future/struct.MergeBounded.html\" title=\"struct n0_future::MergeBounded\">MergeBounded</a>&lt;S&gt;&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"n0_future/struct.MergeBounded.html\" title=\"struct n0_future::MergeBounded\">MergeBounded</a>&lt;S&gt; as <a class=\"trait\" href=\"n0_future/trait.Stream.html\" title=\"trait n0_future::Stream\">Stream</a>&gt;::<a class=\"associatedtype\" href=\"n0_future/trait.Stream.html#associatedtype.Item\" title=\"type n0_future::Stream::Item\">Item</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to pull out the next value of this stream, registering the\ncurrent task for wakeup if the value is not yet available, and returning\n<code>None</code> if the stream is exhausted. <a href=\"n0_future/trait.Stream.html#tymethod.poll_next\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_core/stream.rs.html#105\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"n0_future/trait.Stream.html#method.size_hint\" class=\"fn\">size_hint</a>(&amp;self) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Returns the bounds on the remaining length of the stream. <a href=\"n0_future/trait.Stream.html#method.size_hint\">Read more</a></div></details></div></details>","Stream","n0_future::Merge"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[9399]}